mkdir 创建目录
pwd显示当前路径
git init 初始化git仓库
git add file添加文件到暂存区index，可一次添加多个
git commit -m <message>提交文件到分支（master），  -m文件说明；可以一次提交多个，多次add， 一次commit
git push 把本地库记录推送到远程库
git log 显示从最近到最远的提交日志 --pretty=online   Q退出
git reset版本回退 --hard HEAD^回退到上个版本，^^上两个，~100上一百个
git reset --hard <commitid>
git reflog 查看记录的每一条命令

工作区和暂存区
learngit文件夹是一个工作区。
.git隐藏文件是一个版本库
版本库中有一个stage（index）暂存区，第一个分支master，指向master的指针HEAD
git status 查看状态
git diff HEAD -- learngit01 查看工作区和版本库最新版本的区别
git checkout -- learngit01 工作区中的learngit01返回到上一次add或者commit状态
git reset HEAD learngit01 将暂存区的修改退回到工作区

删除文件
git rm 删除工作区一个文件
git rm -r --cached readme 删除缓存区的文件
提交推上去可以删除远程区的文件

远程仓库
ssh-keygen -t rsa -C "2038852203@qq.com" 生成自己的公私钥
复制公钥内容到GitHub/Accounting Settings/SSH Keys;title任意填
GitHub创建同名仓库
git remote add origin git@github.com:HeCunGuo/learngit.git；添加远程仓库
origin意思是远程库，也可自己命名
git push -u origin master ;初始推送，如果有不相干的历史记录需要先拉到本地库再推
git push origin master ;将当前分支master推送到远程
git pull origin master 将远程库的东西拉到本地库参数 --allow-unrelated-histories（如果有不相干的历史记录可用这个）
master是主分支，要时刻与远程分支保持同步
dev是开发分支，也要同步
bug分支只用于本地修复bug
feature分支是否推送取决是否合作开发
远程库克隆
先创建远程库gitclone
git clone git@github.com:HeCunGuo/gitclone.git
其中地址也可以用https://github.com/HeCunGuo/gitclone.git，不过推送需要口令而且慢
git switch -c dev创建并切换到dev分支
git branch 查看分支信息
git add  ；git commit -m message  ；提交到dev分支
git switch master 切回master分支
git merge dev 将dev分支合并到当前分支
git branch -d dev 删除分支dev

git stash 保存工作现场
git stash list
git stash apply 恢复现场
git stash pop 恢复现场并删除stash中内容
git branch -D <name>强行删除一个没被合并的分支
git remote 查看远程库信息
git rebase 整理成直线分支


标签管理
tag 与commitid相绑定
git tag v1.0在当前分支创建标签
git tag 查看所有标签信息
git tag v0.9 commitid 对以前版本打标签
标签按字母排序
git show v1.0 查看标签信息
git -a v1.0 -m "打标签" commitid 对某版本打标签并写说明

